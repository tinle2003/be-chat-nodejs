{"version":3,"sources":["core/func.js","serviceWorker.js","component/LoginScreen/index.js","component/HeaderScreen/index.js","component/HeaderScreen/layout.jsx","component/HomeScreen/index.js","component/HomeScreen/layout.jsx","component/LoginScreen/layout.jsx","dataReducer/api.js","dataReducer/user.js","component/MusicScreen/AddMusic/layout.jsx","dataReducer/music.js","dataReducer/singer.js","dataReducer/category.js","component/MusicScreen/AddMusic/index.js","component/CategoryScreen/layout.jsx","component/CategoryScreen/index.js","component/SingerScreen/layout.jsx","component/SingerScreen/index.js","component/AlbumScreen/layout.jsx","dataReducer/album.js","component/AlbumScreen/index.js","component/UserScreen/layout.jsx","component/UserScreen/index.js","index.js"],"names":["module","exports","convertSlug","str","toLowerCase","replace","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","timerInterval","HeaderScreen","Fragment","Navbar","bg","variant","Brand","className","href","Component","HomeScreen","props","onToggleNav","value","setState","toggleNav","componentWillReceiveProps","nextProps","nextState","undefined","typeActions","hash","breadCrumb","this","nav_side_left","style","backgroundColor","flex","onToggle","e","onSelect","selected","Toggle","Nav","defaultSelected","eventKey","fontSize","renderBreadCrumb","arr","split","Breadcrumb","map","data","Item","String","toLocaleUpperCase","renderHome","Row","Col","Card","alignItems","padding","borderRadius","renderTab","textAlign","height","overflow","layout","onChange","onChangeText","target","type","placeholder","name","onClick","btnLogin","defaultValue","url","login","username","password","a","fetch","method","body","JSON","stringify","headers","respone","json","responeJson","alert","getUsers","fields","LoginScreen","nameState","stt","Swal","fire","title","msg","html","timer","onBeforeOpen","showLoading","setInterval","getContent","querySelector","textContent","Math","round","getTimerLeft","onClose","clearInterval","sessionStorage","setItem","token","history","push","position","showConfirmButton","ExportCSVButton","CSVExport","SearchBar","Search","columns","dataField","text","modalAddMusic","showModalAdd","nameMusic","singerMusic","authorMusic","Modal","show","onHide","dialogClassName","aria-labelledby","Header","closeButton","Title","id","Body","Form","Group","controlId","Label","Control","onchangeText","as","listSinger","uploadImage","listCategory","i","key","Check","label","Button","addMusic","selectRows","mode","clickToSelect","row","isSelect","rowIndex","selectMusic","pagination","paginationFactory","custom","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","paginationProps","paginationTableProps","keyField","search","exportCSV","toolkitprops","float","showModalEdit","csvProps","searchProps","striped","hover","selectRow","baseProps","getListMusic","page","limit","Accept","getDetailMusic","idMusic","formData","axios","post","err","fetchListSinger","addSinger","editSinger","dataUpdate","detailSinger","fetchListCategory","addCategory","AddMusicScreen","componentDidMount","getListSinger","categoryMusic","concat","fetchMusicDetail","singer","author","FormData","imgMusic","append","dataMusic","event","files","Layout","CategoryScreen","dataCategory","fetchSingerDetail","nameCategory","nameSinger","realNameSinger","infoSinger","bithdaySinger","width","SingerScreen","dataSinger","params","dataSelect","real_name","birthday","info","imgSinger","idSinger","img","btnAddSinger","categorySinger","category","btnEditSinger","paramsUpdate","formatter","cell","listMusic","length","singerAlbum","nameAlbum","infoAlbum","hotAlbum","imgAlbum","categoryAlbum","onChangeSelectMusic","isMulti","options","checked","btnAddAlbum","dataAlbum","getListAlbum","addAlbum","CategoryScree","fetchDataAlbum","array","dat","Object","assign","musicSeleted","hot","song","time","Date","getTime","slug","UserScreen","getListUser","userList","App","path","component","PrivateRoute","exact","render","rest","getItem","to","pathname","ReactDOM","document","getElementById","URL","process","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.79af9728.chunk.js","sourcesContent":["function convertSlug(str) {\r\n    str= str.toLowerCase();\r\n    str= str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g,\"a\");\r\n    str= str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g,\"e\");\r\n    str= str.replace(/ì|í|ị|ỉ|ĩ/g,\"i\");\r\n    str= str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g,\"o\");\r\n    str= str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g,\"u\");\r\n    str= str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g,\"y\");\r\n    str= str.replace(/đ/g,\"d\");\r\n    str= str.replace(/!|@|%|\\^|\\*|\\(|\\)|\\+|\\=|\\<|\\>|\\?|\\/|,|\\.|\\:|\\;|\\'| |\\\"|\\&|\\#|\\[|\\]|~|$|_/g,\"-\");\r\n    str= str.replace(/-+-/g,\"-\");\r\n    str= str.replace(/^\\-+|\\-+$/g,\"\");\r\n\r\n    return str;\r\n}\r\n\r\nmodule.exports = {\r\n    convertSlug\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import layout from \"./layout.jsx\";\r\nimport {login} from '../../dataReducer/user';\r\nimport Swal from 'sweetalert2'\r\n\r\nlet timerInterval\r\n\r\nexport default class LoginScreen extends layout{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n        }\r\n    }\r\n\r\n    onChangeText = (nameState,value)=>{\r\n        this.setState({\r\n            [nameState]:value\r\n        })\r\n    }\r\n\r\n    btnLogin = ()=>{\r\n        let {username,password} = this.state\r\n\r\n        login(username,password).then((data)=>{\r\n            switch(data.stt){\r\n                case 0:\r\n                Swal.fire({\r\n                    title:data.msg,\r\n                    html:\"Sẽ chuyển trang trong <strong></strong> milisecond\",\r\n                    timer:3000,\r\n                    onBeforeOpen: () => {\r\n                        Swal.showLoading()\r\n                        timerInterval = setInterval(()=>{\r\n                            Swal.getContent().querySelector(\"strong\").textContent = Math.round(Swal.getTimerLeft()/1000)\r\n                        },100)\r\n                      },\r\n                      onClose: () => {\r\n                        clearInterval(timerInterval)\r\n                        sessionStorage.setItem(\"token\",data.token)\r\n                        this.props.history.push(\"/admin\")\r\n                      }\r\n                })\r\n                break;\r\n                case 1:\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    type: 'error',\r\n                    title: data.msg,\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                  })\r\n                break;\r\n\r\n                default:\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    type: 'warning',\r\n                    title: \"Vui lòng thử lại sau!\",\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                  })\r\n                break;\r\n            }\r\n        })\r\n    }\r\n}","import Layout from './layout.jsx';\r\n\r\nexport default class HeaderScreen extends Layout{\r\n    \r\n}","import React, { Component } from \"react\";\r\nimport {Navbar,NavbarBrand} from 'react-bootstrap'\r\nexport default class Layout extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand className=\"col-xs-1 center-block\" href=\"#home\">\r\n            <span className=\"titleLogo\">\r\n                Echo Of Life\r\n            </span>\r\n          </Navbar.Brand>\r\n        </Navbar>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import layout from \"./layout.jsx\";\r\n\r\nlet index = 0;\r\nlet arr = [];\r\nexport default class HomeScreen extends layout {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toggleNav:false,\r\n      breadCrumb:\"Home\",\r\n      typeActions:\"\"\r\n    };\r\n  }\r\n\r\n  onToggleNav = (value)=>{\r\n    this.setState({toggleNav:value})\r\n  }\r\n\r\n  componentDidMount(){\r\n    let {location} = this.props\r\n    this.setState({\r\n      typeActions:location.hash,\r\n      breadCrumb:location.hash.replace(\"#\",\"\")\r\n    })\r\n    // console.log(this.state.typeActions.replace(\"#\",\"\"))\r\n  }\r\n\r\n  \r\n  \r\n\r\n  componentWillReceiveProps=(nextProps,nextState)=>{\r\n    let {location} = nextProps;\r\n    if(location != undefined && location != this.props.location){\r\n      this.setState({\r\n        typeActions:location.hash\r\n      })\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Card,\r\n  Accordion,\r\n  Button,\r\n  Breadcrumb\r\n} from \"react-bootstrap\";\r\nimport SideNav, {\r\n  Toggle,\r\n  Nav,\r\n  NavItem,\r\n  NavIcon,\r\n  NavText\r\n} from \"@trendmicro/react-sidenav\";\r\nimport HeaderSreen from \"../HeaderScreen\";\r\nimport \"./styles.css\";\r\nimport { LoginScreen, AddMusicScreen, CategoryScreen, SingerScreen, AlbumScreen, UserScreen } from \"..\";\r\nexport default class layout extends Component {\r\n  nav_side_left = () => {\r\n    return (\r\n      <SideNav\r\n        style={{\r\n          backgroundColor: \"#0e0c28\",\r\n          flex: 1\r\n        }}\r\n        onToggle={e => this.onToggleNav(e)}\r\n        onSelect={selected => {\r\n          this.setState({\r\n            breadCrumb: selected\r\n          });\r\n          window.location = \"/admin#\" + selected;\r\n          // Add your code here\r\n          // alert(selected)\r\n        }}\r\n      >\r\n        <SideNav.Toggle />\r\n        <SideNav.Nav\r\n          defaultSelected={this.props.location.hash.replace(\"#\", \"\")}\r\n        >\r\n          <NavItem eventKey=\"home\">\r\n            <NavIcon>\r\n              <i className=\"fa fa-fw fa-home\" style={{ fontSize: \"1.75em\" }} />\r\n            </NavIcon>\r\n            <NavText>Home</NavText>\r\n          </NavItem>\r\n\r\n          <NavItem eventKey=\"music\">\r\n            <NavIcon>\r\n              <i className=\"fa fa-fw fa-music\" style={{ fontSize: \"1.75em\" }} />\r\n            </NavIcon>\r\n            <NavText>Music</NavText>\r\n            {/* <NavItem eventKey=\"music/add\">\r\n              <NavText>Add music</NavText>\r\n            </NavItem>\r\n            <NavItem eventKey=\"music/edit\">\r\n              <NavText>Edit music</NavText>\r\n            </NavItem>\r\n            <NavItem eventKey=\"music/delete\">\r\n              <NavText>Delete music</NavText>\r\n            </NavItem> */}\r\n          </NavItem>\r\n\r\n          <NavItem eventKey=\"category\">\r\n            <NavIcon>\r\n              <i\r\n                style={{ fontSize: \"1.75em\" }}\r\n                className=\"zmdi zmdi-collection-music\"\r\n              ></i>\r\n            </NavIcon>\r\n            <NavText>Category</NavText>\r\n            {/* <NavItem eventKey=\"category/add\">\r\n              <NavText>Add category</NavText>\r\n            </NavItem>\r\n            <NavItem eventKey=\"category/edit\">\r\n              <NavText>Edit category</NavText>\r\n            </NavItem>\r\n            <NavItem eventKey=\"category/delete\">\r\n              <NavText>Delete category</NavText>\r\n            </NavItem> */}\r\n          </NavItem>\r\n\r\n          <NavItem eventKey=\"singer\">\r\n            <NavIcon>\r\n              <i style={{ fontSize: \"1.75em\" }} className=\"zmdi zmdi-album\"></i>\r\n            </NavIcon>\r\n            <NavText>Singer</NavText>\r\n            {/* <NavItem eventKey=\"singer/add\">\r\n              <NavText>Add singer</NavText>\r\n            </NavItem>\r\n            <NavItem eventKey=\"singer/edit\">\r\n              <NavText>Edit singer</NavText>\r\n            </NavItem>\r\n            <NavItem eventKey=\"singer/delete\">\r\n              <NavText>Delete singer</NavText>\r\n            </NavItem> */}\r\n          </NavItem>\r\n\r\n          <NavItem eventKey=\"album\">\r\n            <NavIcon>\r\n              <i style={{ fontSize: \"1.75em\" }} className=\"zmdi zmdi-album\"></i>\r\n            </NavIcon>\r\n            <NavText>Album</NavText>\r\n            {/* <NavItem eventKey=\"album/add\">\r\n              <NavText>Add album</NavText>\r\n            </NavItem>\r\n            <NavItem eventKey=\"album/edit\">\r\n              <NavText>Edit album</NavText>\r\n            </NavItem>\r\n            <NavItem eventKey=\"album/delete\">\r\n              <NavText>Delete album</NavText>\r\n            </NavItem> */}\r\n          </NavItem>\r\n\r\n          <NavItem eventKey=\"topic\">\r\n            <NavIcon>\r\n              <i\r\n                style={{ fontSize: \"1.75em\" }}\r\n                className=\"zmdi zmdi-bookmark\"\r\n              ></i>\r\n            </NavIcon>\r\n            <NavText>Topic</NavText>\r\n            {/* <NavItem eventKey=\"topic/add\">\r\n              <NavText>Add topic</NavText>\r\n            </NavItem>\r\n            <NavItem eventKey=\"topic/edit\">\r\n              <NavText>Edit topic</NavText>\r\n            </NavItem>\r\n            <NavItem eventKey=\"topic/delete\">\r\n              <NavText>Delete topic</NavText>\r\n            </NavItem> */}\r\n          </NavItem>\r\n\r\n          <NavItem eventKey=\"user\">\r\n            <NavIcon>\r\n              <i\r\n                style={{ fontSize: \"1.75em\" }}\r\n                className=\"typcn typcn-user\"\r\n              ></i>\r\n            </NavIcon>\r\n\r\n            <NavText>User</NavText>\r\n            {/* <NavItem eventKey=\"user/add\">\r\n              <NavText>Add User</NavText>\r\n            </NavItem>\r\n            <NavItem eventKey=\"user/edit\">\r\n              <NavText>Edit User</NavText>\r\n            </NavItem>\r\n            <NavItem eventKey=\"user/delete\">\r\n              <NavText>Delete User</NavText>\r\n            </NavItem> */}\r\n          </NavItem>\r\n        </SideNav.Nav>\r\n      </SideNav>\r\n    );\r\n  };\r\n\r\n  renderBreadCrumb = () => {\r\n    let { breadCrumb } = this.state;\r\n    let arr = breadCrumb.split(\"/\");\r\n    return (\r\n      <Breadcrumb>\r\n        {arr.map(data => {\r\n          return (\r\n            <Breadcrumb.Item href=\"#\">\r\n              {String(data).toLocaleUpperCase()}\r\n            </Breadcrumb.Item>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    );\r\n  };\r\n\r\n  renderHome = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className={\"justify-content-center align-items-center mx-md-5 \"}>\r\n          <Row className={\"flex-wrap row-sm-10\"}>\r\n            <Col className={\"col-sm-3 \"}>\r\n              <Card\r\n                className={\"py-sm-3 bgUser\"}\r\n                style={{ alignItems: \"center\", padding: 10, borderRadius: 10 }}\r\n              >\r\n                <i\r\n                  style={{ fontSize: \"1.75em\" }}\r\n                  className=\"typcn typcn-user\"\r\n                />\r\n                <label>User</label>\r\n                <label>number</label>\r\n              </Card>\r\n            </Col>\r\n            <Col className={\"col-sm-3\"}>\r\n              <Card\r\n                className={\"py-sm-3 bgSinger\"}\r\n                style={{ alignItems: \"center\", padding: 10, borderRadius: 10 }}\r\n              >\r\n                <i\r\n                  style={{ fontSize: \"1.75em\" }}\r\n                  className=\"typcn typcn-user\"\r\n                />\r\n                <label>Singer</label>\r\n                <label>number</label>\r\n              </Card>\r\n            </Col>\r\n            <Col className={\"col-sm-3 \"}>\r\n              <Card\r\n                className={\"py-sm-3 bgThird\"}\r\n                style={{ alignItems: \"center\", padding: 10, borderRadius: 10 }}\r\n              >\r\n                <i\r\n                  style={{ fontSize: \"1.75em\" }}\r\n                  className=\"typcn typcn-user\"\r\n                />\r\n                <label>User</label>\r\n                <label>User</label>\r\n              </Card>\r\n            </Col>\r\n            <Col className={\"col-sm-3\"}>\r\n              <Card\r\n                className={\"py-sm-3 bgFour\"}\r\n                style={{ alignItems: \"center\", padding: 10, borderRadius: 10 }}\r\n              >\r\n                <i\r\n                  style={{ fontSize: \"1.75em\" }}\r\n                  className=\"typcn typcn-user\"\r\n                />\r\n                <label>User</label>\r\n                <label>User</label>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  renderTab = () => {\r\n    let { typeActions } = this.state;\r\n    switch (typeActions) {\r\n      case \"\":\r\n      case \"#home\":\r\n        return this.renderHome();\r\n\r\n      case \"#music\":\r\n        return <AddMusicScreen />;\r\n\r\n      case \"#category\":\r\n        return <CategoryScreen />;\r\n\r\n      case \"#singer\":\r\n        return <SingerScreen />;\r\n\r\n      case \"#album\":\r\n        return <AlbumScreen/>\r\n       \r\n        \r\n      case \"#user\":\r\n        return  <UserScreen/>\r\n      default:\r\n        return <h1 style={{ textAlign: \"center\" }}>Not Found</h1>;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <HeaderSreen />\r\n        </div>\r\n        <div\r\n          className=\"container-fluid bg-light \"\r\n          style={{\r\n            height: \"100%\"\r\n          }}\r\n        >\r\n          <Row className=\"left row bgSlide \">\r\n            <Col className={\"col-sm-1\"}>{this.nav_side_left()}</Col>\r\n            <Col\r\n              style={{\r\n                overflow: \"auto\",\r\n                height: \"100%\"\r\n              }}\r\n              className={\"col-sm-11 \"}\r\n            >\r\n              {/* {this.renderHome()} */}\r\n              {this.renderBreadCrumb()}\r\n              <div style={{overflow:'auto'}}>\r\n              {this.renderTab()}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport './styles.css'\r\nexport default class layout extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"body\" />\r\n        <div className=\"grad\" />\r\n        <div className=\"header\">\r\n          <div>Echo<span> Of Life</span></div>\r\n        </div>\r\n        <br />\r\n        <div className=\"login\">\r\n          <input onChange={(e)=>this.onChangeText(\"username\",e.target.value)} type=\"text\" placeholder=\"username\" name=\"user\" /><br />\r\n          <input onChange={(e)=>this.onChangeText(\"password\",e.target.value)} type=\"password\" placeholder=\"password\" name=\"password\" /><br />\r\n          <input onClick={()=>this.btnLogin()} type=\"button\" defaultValue=\"Login\" />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","// const url = \"http://echooflife.xyz/api\"\r\nconst url = \"http://localhost:3000/api\"\r\nexport {url}","import { url } from \"./api\";\r\nconst login = async (username, password) => {\r\n  try {\r\n    let respone = await fetch(url + \"/admin/login\", {\r\n        method:\"post\",\r\n        body:JSON.stringify({\r\n            data:{\r\n                username:username,\r\n                password:password\r\n            }\r\n        }),\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n    });\r\n    let responeJson = await respone.json();\r\n    return responeJson;\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n};\r\n\r\nconst getUsers = async (data, fields) => {\r\n  try {\r\n    let respone = await fetch(url + \"/user\", {\r\n        method:\"post\",\r\n        body:JSON.stringify({\r\n            data,\r\n            fields\r\n        }),\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n    });\r\n    let responeJson = await respone.json();\r\n    return responeJson.data;\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n};\r\n\r\nexport { login,getUsers };\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal, Form, Col } from \"react-bootstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport filterFactory, { textFilter } from \"react-bootstrap-table2-filter\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport\r\n} from \"react-bootstrap-table2-toolkit\";\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nconst { SearchBar } = Search;\r\nconst columns = [\r\n  {\r\n    dataField: \"id\",\r\n    text: \"Music ID\"\r\n  },\r\n  {\r\n    dataField: \"title\",\r\n    text: \"Music Name\"\r\n  },\r\n  {\r\n    dataField: \"singer\",\r\n    text: \"Music Singer\"\r\n  },\r\n  {\r\n    dataField: \"url\",\r\n    text: \"Music URL\"\r\n  },\r\n  {\r\n    dataField: \"type\",\r\n    text: \"Disable\"\r\n  }\r\n];\r\n\r\nexport default class layout extends Component {\r\n  modalAddMusic = () => {\r\n    let { showModalAdd, nameMusic, singerMusic, authorMusic } = this.state;\r\n    return (\r\n      <Modal\r\n        show={showModalAdd}\r\n        onHide={() => this.showModalAdd()}\r\n        dialogClassName=\"modal-90w\"\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-custom-modal-styling-title\">\r\n            Add Music\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form id={\"formData\"} name={\"formData\"}>\r\n            <Form.Group controlId=\"formGridNameMusic\">\r\n              <Form.Label>Name music</Form.Label>\r\n              <Form.Control\r\n                value={nameMusic}\r\n                onChange={e => this.onchangeText(\"nameMusic\", e.target.value)}\r\n                placeholder=\"Enter name music\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridNameSinger\">\r\n              <Form.Label>Singer</Form.Label>\r\n              <Form.Control\r\n                as={\"Select\"}\r\n                value={singerMusic}\r\n                onChange={e => this.onchangeText(\"singerMusic\", e.target.value)}\r\n                placeholder=\"Enter name singer\"\r\n              >\r\n                {/* <option>asasasa</option> */}\r\n                {this.state.listSinger != undefined &&\r\n                  this.state.listSinger.map(data => {\r\n                    return <option>{data.name}</option>;\r\n                  })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridNameAuthor\">\r\n              <Form.Label>Author</Form.Label>\r\n              <Form.Control\r\n                value={authorMusic}\r\n                onChange={e => this.onchangeText(\"authorMusic\", e.target.value)}\r\n                placeholder=\"Enter author\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formUploadMp3\">\r\n              <Form.Label>Upload file music</Form.Label>\r\n              <Form.Control onChange={e => this.uploadImage(e)} type={\"file\"} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formUploadImg\">\r\n              <Form.Label>Upload image music</Form.Label>\r\n              <Form.Control onChange={(e)=>this.onchangeText(\"imgMusic\",e.target.value)} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridChooseCategory\">\r\n              <Form.Label>Category</Form.Label>\r\n\r\n              <Form.Control as=\"select\">\r\n                {this.state.listCategory != undefined && this.state.listCategory.map((data,i)=>{\r\n                  return(\r\n                    <option key={i}>{data.name}</option>\r\n                  )\r\n                })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"formGridCheckbox\">\r\n              <Form.Check type=\"checkbox\" label=\"Disable me?\" />\r\n            </Form.Group>\r\n\r\n            <Button\r\n              onClick={() => this.addMusic()}\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const options = {\r\n      custom: true,\r\n      paginationSize: 4,\r\n      pageStartIndex: 1,\r\n      firstPageText: \"First\",\r\n      prePageText: \"Back\",\r\n      nextPageText: \"Next\",\r\n      lastPageText: \"Last\",\r\n      nextPageTitle: \"First page\",\r\n      prePageTitle: \"Pre page\",\r\n      firstPageTitle: \"Next page\",\r\n      lastPageTitle: \"Last page\",\r\n      showTotal: true\r\n      // totalSize: this.state.data.length,\r\n    };\r\n\r\n    const selectRows = {\r\n      mode: \"radio\",\r\n      clickToSelect: true,\r\n      onSelect: (row, isSelect, rowIndex, e) => {\r\n        console.log(row);\r\n        this.setState({\r\n          selectMusic: row.id\r\n        });\r\n      }\r\n    };\r\n\r\n    const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n      <div>\r\n        <ToolkitProvider\r\n          keyField=\"id\"\r\n          columns={columns}\r\n          data={this.state.data != undefined ? this.state.data : []}\r\n          search\r\n          exportCSV\r\n        >\r\n          {toolkitprops => (\r\n            <div>\r\n              <div style={{ float: \"right\" }}>\r\n                <Button\r\n                  onClick={() => this.showModalAdd()}\r\n                  className={\"btn-md mx-md-2 px-md-4\"}\r\n                  style={{ borderRadius: 10 }}\r\n                >\r\n                  Add\r\n                </Button>\r\n                <Button\r\n                  variant=\"info\"\r\n                  onClick={() => this.showModalEdit()}\r\n                  className={\"btn-md mx-md-2 px-md-4\"}\r\n                  style={{ borderRadius: 10 }}\r\n                >\r\n                  Edit\r\n                </Button>\r\n                <ExportCSVButton\r\n                  className={\" btn-danger  btn-md btn mx-md-2 px-md-4\"}\r\n                  style={{\r\n                    borderRadius: 10\r\n                  }}\r\n                  {...toolkitprops.csvProps}\r\n                >\r\n                  Export CSV\r\n                </ExportCSVButton>\r\n                <SearchBar {...toolkitprops.searchProps} />\r\n              </div>\r\n              <BootstrapTable\r\n                striped\r\n                hover\r\n                selectRow={selectRows}\r\n                {...toolkitprops.baseProps}\r\n                {...paginationTableProps}\r\n              />\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n        <PaginationListStandalone {...paginationProps} />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={\"mt-md-2 mx-md-5 mb-md-5\"}>\r\n        <PaginationProvider pagination={paginationFactory(options)}>\r\n          {contentTable}\r\n        </PaginationProvider>\r\n\r\n        {/* Modal */}\r\n        {this.modalAddMusic()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { url } from \"./api\";\r\nimport axios from 'axios'\r\nconst getListMusic = async () => {\r\n  try {\r\n    let respone = await fetch(url + \"/music\", {\r\n      method: \"post\",\r\n      body: JSON.stringify({\r\n        data: {\r\n          page:1,\r\n          limit:30\r\n        },\r\n        fields:``\r\n      }),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    let responeJson = await respone.json();\r\n\r\n    return responeJson.data;\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n};\r\n\r\nconst getDetailMusic = async (idMusic) => {\r\n  try {\r\n    let respone = await fetch(url + \"/music\", {\r\n      method: \"post\",\r\n      body: JSON.stringify({\r\n        data: {\r\n          id:idMusic\r\n        },\r\n        fields:``\r\n      }),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    let responeJson = await respone.json();\r\n\r\n    return responeJson.data[0];\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n};\r\n\r\n\r\nconst addMusic = async (formData) => {\r\n    axios.post(url+\"/upload\",formData,{\r\n      headers:{\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    }).then((data)=>{\r\n      console.log(data)\r\n    }).catch((err)=>{\r\n      console.log(err)\r\n    })\r\n};\r\n\r\n\r\nexport { getListMusic,getDetailMusic,addMusic };\r\n","import { url } from \"./api\";\r\n\r\n\r\nconst fetchListSinger = async()=>{\r\n    try {\r\n        let respone = await fetch(url + \"/singer\", {\r\n          method: \"post\",\r\n          body: JSON.stringify({\r\n            data: {\r\n              limit:50\r\n            },\r\n            fields:``\r\n          }),\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        });\r\n        let responeJson = await respone.json();\r\n    \r\n        return responeJson.data;\r\n      } catch (err) {\r\n        alert(err);\r\n      }\r\n}\r\n\r\nconst addSinger = async(data)=>{\r\n  try {\r\n    let respone = await fetch(url + \"/singer/add\", {\r\n      method: \"post\",\r\n      body: JSON.stringify({\r\n        data:data,\r\n      }),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    let responeJson = await respone.json();\r\n\r\n    return responeJson;\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n}\r\n\r\nconst editSinger = async(data,dataUpdate)=>{\r\n  try {\r\n    let respone = await fetch(url + \"/singer/change\", {\r\n      method: \"post\",\r\n      body: JSON.stringify({\r\n        data:data,\r\n        dataUpdate:dataUpdate\r\n      }),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    let responeJson = await respone.json();\r\n\r\n    return responeJson;\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n}\r\n\r\nconst detailSinger = async(data)=>{\r\n  try {\r\n    let respone = await fetch(url + \"/singer\", {\r\n      method: \"post\",\r\n      body: JSON.stringify({\r\n        data:data,\r\n      }),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    let responeJson = await respone.json();\r\n\r\n    return responeJson;\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n}\r\n\r\nexport {fetchListSinger,addSinger,detailSinger,editSinger}","import { url } from \"./api\";\r\n\r\n\r\nconst fetchListCategory = async()=>{\r\n    try {\r\n        let respone = await fetch(url + \"/category\", {\r\n          method: \"post\",\r\n          body: JSON.stringify({\r\n            data: {\r\n              page:1,\r\n              limit:30\r\n            },\r\n            fields:``\r\n          }),\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        });\r\n        let responeJson = await respone.json();\r\n    \r\n        return responeJson.data;\r\n      } catch (err) {\r\n        alert(err);\r\n      }\r\n}\r\n\r\n\r\nconst addCategory = async(data)=>{\r\n  try {\r\n      let respone = await fetch(url + \"/category/add\", {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          data\r\n        }),\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n      let responeJson = await respone.json();\r\n  \r\n      return responeJson;\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n}\r\n\r\nexport {fetchListCategory,addCategory}","import Layout from \"./layout\";\r\nimport {\r\n  getListMusic,\r\n  getDetailMusic,\r\n  addMusic\r\n} from \"../../../dataReducer/music\";\r\nimport Swal from \"sweetalert2\";\r\nimport { fetchListSinger } from \"../../../dataReducer/singer\";\r\nimport { fetchListCategory } from \"../../../dataReducer/category\";\r\n\r\nexport default class AddMusicScreen extends Layout {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showModalAdd: false,\r\n      showModalEdit: false,\r\n      data: [],\r\n      listSinger: [],\r\n      listCategory: [],\r\n      selectMusic: null,\r\n      nameMusic: \"\",\r\n      singerMusic: \"\",\r\n      authorMusic: \"\",\r\n      categoryMusic: \"\",\r\n      dataMusic: \"\",\r\n      imgMusic: \"\",\r\n      type: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getListMusic();\r\n    this.getListSinger();\r\n    this.fetchListCategory();\r\n  };\r\n\r\n  showModalAdd = () => {\r\n    this.setState({\r\n      showModalAdd: !this.state.showModalAdd,\r\n      selectMusic: null,\r\n      nameMusic: \"\",\r\n      singerMusic: \"\",\r\n      authorMusic: \"\",\r\n      categoryMusic: \"\"\r\n    });\r\n  };\r\n\r\n  getListSinger = () => {\r\n    fetchListSinger().then(data => {\r\n      this.setState({\r\n        listSinger: this.state.listSinger.concat(data)\r\n      });\r\n    });\r\n  };\r\n\r\n  fetchListCategory = () => {\r\n    fetchListCategory().then(data => {\r\n      this.setState({\r\n        listCategory: this.state.listCategory.concat(data)\r\n      });\r\n    });\r\n  };\r\n\r\n  getListMusic = () => {\r\n    getListMusic().then(data => {\r\n      this.setState({\r\n        data: data\r\n      });\r\n    });\r\n  };\r\n\r\n  fetchMusicDetail = () => {\r\n    let { selectMusic } = this.state;\r\n    if (this.state.type == 1) {\r\n      if (selectMusic) {\r\n        getDetailMusic(this.state.selectMusic)\r\n          .then(data => {\r\n            this.setState({\r\n              nameMusic: data.title,\r\n              singerMusic: data.singer,\r\n              authorMusic: data.author,\r\n              showModalAdd: !this.state.showModalAdd\r\n            });\r\n          })\r\n          .catch(err => {\r\n            Swal.fire({\r\n              position: \"center\",\r\n              type: \"error\",\r\n              title: err,\r\n              showConfirmButton: false,\r\n              timer: 1000\r\n            });\r\n          });\r\n      } else {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          type: \"warning\",\r\n          title: \"Chưa chọn dữ liệu cần thay đổi!\",\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  showModalEdit = () => {\r\n    this.setState(\r\n      {\r\n        type: 1\r\n      },\r\n      () => this.fetchMusicDetail()\r\n    );\r\n  };\r\n\r\n  onchangeText = (nameState, value) => {\r\n    this.setState({\r\n      [nameState]: value\r\n    });\r\n  };\r\n\r\n  addMusic = () => {\r\n    const data = new FormData();\r\n    let { nameMusic, authorMusic, singerMusic, imgMusic } = this.state;\r\n    data.append(\"name\", nameMusic);\r\n    data.append(\"author\", authorMusic);\r\n    data.append(\"singer\", singerMusic);\r\n    data.append(\"type\", \"mp3\");\r\n    data.append(\"file\", this.state.dataMusic);\r\n    data.append(\"img\", imgMusic);\r\n    data.append(\"typetable\", \"music\");\r\n    addMusic(data).then(data => {\r\n      this.getListMusic();\r\n    });\r\n  };\r\n\r\n  uploadImage = event => {\r\n    console.log(event.target.files[0]);\r\n    this.setState({\r\n      dataMusic: event.target.files[0]\r\n    });\r\n  };\r\n  // END CLASS\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal, Form, Col } from \"react-bootstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport filterFactory, { textFilter } from \"react-bootstrap-table2-filter\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nconst { SearchBar } = Search;\r\nconst columns = [\r\n  {\r\n    dataField: \"id\",\r\n    text: \"Category ID\"\r\n  },\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Category Name\"\r\n  },\r\n  {\r\n    dataField: \"type\",\r\n    text: \"Disable\"\r\n  }\r\n];\r\nexport default class layout extends Component {\r\n  \r\n  modalAddMusic = () => {\r\n    let { showModalAdd, nameSinger, realNameSinger, infoSinger,bithdaySinger } = this.state;\r\n    return (\r\n      <Modal\r\n        show={showModalAdd}\r\n        onHide={() => this.showModalAdd()}\r\n        dialogClassName=\"modal-90w\"\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-custom-modal-styling-title\">\r\n            Add Category\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formGridNameMusic\">\r\n              <Form.Label>Name Category</Form.Label>\r\n              <Form.Control\r\n                value={nameSinger}\r\n                onChange={e => this.onchangeText(\"nameCategory\", e.target.value)}\r\n                placeholder=\"Enter name category\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"formGridCheckbox\">\r\n              <Form.Check type=\"checkbox\" label=\"Disable me?\" />\r\n            </Form.Group>\r\n\r\n            <Button onClick={()=>this.state.type == 1?this.addCategory():this.addCategory()} variant=\"primary\" type=\"submit\">\r\n              {this.state.type == 1 ?\"Edit\":\"Add\"}\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const options = {\r\n      custom: true,\r\n      paginationSize: 4,\r\n      pageStartIndex: 1,\r\n      firstPageText: \"First\",\r\n      prePageText: \"Back\",\r\n      nextPageText: \"Next\",\r\n      lastPageText: \"Last\",\r\n      nextPageTitle: \"First page\",\r\n      prePageTitle: \"Pre page\",\r\n      firstPageTitle: \"Next page\",\r\n      lastPageTitle: \"Last page\",\r\n      showTotal: true\r\n      //   totalSize: this.state.data.length\r\n    };\r\n\r\n    const selectRows = {\r\n      mode: \"radio\",\r\n      clickToSelect: true,\r\n      onSelect: (row, isSelect, rowIndex, e) => {\r\n        this.setState({\r\n          selectMusic: row.id\r\n        });\r\n      }\r\n    };\r\n\r\n    const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n      <div>\r\n        <ToolkitProvider\r\n          keyField=\"id\"\r\n          columns={columns}\r\n            data={this.state.dataCategory != undefined ? this.state.dataCategory : []}\r\n          // data={[{ id: 1 }]}\r\n          search\r\n        >\r\n          {toolkitprops => (\r\n            <div>\r\n              <div style={{ float: \"right\" }}>\r\n                <Button\r\n                  onClick={() => this.showModalAdd()}\r\n                  className={\"btn-md mx-md-2 px-md-4\"}\r\n                >\r\n                  Add\r\n                </Button>\r\n                <Button\r\n                  variant=\"info\"\r\n                  onClick={() => this.showModalEdit()}\r\n                  className={\"btn-md mx-md-2 px-md-4\"}\r\n\r\n                >\r\n                  Edit\r\n                </Button>\r\n                <SearchBar {...toolkitprops.searchProps} />\r\n              </div>\r\n              <BootstrapTable\r\n                striped\r\n                hover\r\n                selectRow={selectRows}\r\n                {...toolkitprops.baseProps}\r\n                {...paginationTableProps}\r\n              />\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n        <PaginationListStandalone {...paginationProps} />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={\"mt-md-2 mx-md-5 mb-md-5\"}>\r\n        <PaginationProvider pagination={paginationFactory(options)}>\r\n          {contentTable}\r\n        </PaginationProvider>\r\n\r\n        {/* Modal */}\r\n        {this.modalAddMusic()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Layout from './layout';\r\nimport { fetchListCategory, addCategory } from '../../dataReducer/category';\r\n\r\n\r\nexport default class CategoryScreen extends Layout{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          dataCategory: [],\r\n          showModalAdd: false,\r\n          type: 0,\r\n          nameCategory:'',\r\n        };\r\n      }\r\n    \r\n      componentDidMount() {\r\n        this.fetchListCategory()\r\n      }\r\n\r\n\r\n      // CALL API\r\n        \r\n      fetchListCategory = ()=>{\r\n        fetchListCategory().then((data)=>{\r\n          this.setState({\r\n            dataCategory:data\r\n          })\r\n        })\r\n      }\r\n\r\n\r\n      // END CALL API\r\n        \r\n      onchangeText = (nameState, value) => {\r\n        console.log(value)\r\n        this.setState({\r\n          [nameState]: value\r\n        });\r\n      };\r\n    \r\n      showModalAdd = () => {\r\n        this.setState({\r\n          showModalAdd: !this.state.showModalAdd\r\n        });\r\n      };\r\n    \r\n    \r\n    \r\n    \r\n      showModalEdit = () => {\r\n        this.setState(\r\n          {\r\n            type: 1\r\n          },\r\n          () => this.fetchSingerDetail()\r\n        );\r\n      };\r\n\r\n      addCategory = ()=>{\r\n        let {nameCategory} = this.state;\r\n        let params = {\r\n          name:nameCategory\r\n        }\r\n        addCategory(params).then((data)=>{\r\n          if(data!= undefined && data!= null){\r\n              alert(data.msg)\r\n          }\r\n        }).catch((err)=>{\r\n          alert(err)\r\n        })\r\n      }\r\n    // END CLASS\r\n}","import React, { Component } from \"react\";\r\nimport { Button, Modal, Form, Col } from \"react-bootstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport filterFactory, { textFilter } from \"react-bootstrap-table2-filter\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nconst { SearchBar } = Search;\r\nconst columns = [\r\n  {\r\n    dataField: \"id\",\r\n    text: \"Singer ID\",\r\n    style: { \"white-space\": \"wrap\", width: \"5%\" }\r\n  },\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Singer Name\",\r\n    style: { \"white-space\": \"wrap\", width: \"15%\" }\r\n  },\r\n  {\r\n    dataField: \"img\",\r\n    text: \"Image\",\r\n    style: { \"white-space\": \"wrap\", width: \"5%\" }\r\n  },\r\n  {\r\n    dataField: \"info\",\r\n    text: \"Info Singer\",\r\n    style: { \"white-space\": \"wrap\", width: \"10%\" }\r\n  },\r\n  {\r\n    dataField: \"real_name\",\r\n    text: \"Real Name\",\r\n    style: { \"white-space\": \"wrap\", width: \"10%\" }\r\n  },\r\n  {\r\n    dataField: \"birthday\",\r\n    text: \"Birthday\",\r\n    style: { \"white-space\": \"wrap\", width: \"10%\" }\r\n  },\r\n  {\r\n    dataField: \"fanpage\",\r\n    text: \"Fanpage\",\r\n    style: { \"white-space\": \"wrap\", width: \"10%\" }\r\n  },\r\n  {\r\n    dataField: \"type\",\r\n    text: \"Disable\",\r\n    style: { \"white-space\": \"wrap\", width: \"10%\" }\r\n  }\r\n];\r\nexport default class layout extends Component {\r\n  modalAddMusic = () => {\r\n    let { showModalAdd, nameSinger, realNameSinger, infoSinger,bithdaySinger } = this.state;\r\n    return (\r\n      <Modal\r\n        show={showModalAdd}\r\n        onHide={() => this.showModalAdd()}\r\n        dialogClassName=\"modal-90w\"\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-custom-modal-styling-title\">\r\n            Add Singer\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formGridNameMusic\">\r\n              <Form.Label>Name Singer</Form.Label>\r\n              <Form.Control\r\n                value={nameSinger}\r\n                onChange={e => this.onchangeText(\"nameSinger\", e.target.value)}\r\n                placeholder=\"Enter name singer\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridNameSinger\">\r\n              <Form.Label>Real name</Form.Label>\r\n              <Form.Control\r\n                value={realNameSinger}\r\n                onChange={e => this.onchangeText(\"realNameSinger\", e.target.value)}\r\n                placeholder=\"Enter real name singer\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridNameAuthor\">\r\n              <Form.Label>Info</Form.Label>\r\n              <Form.Control\r\n                value={infoSinger}\r\n                onChange={e => this.onchangeText(\"infoSinger\", e.target.value)}\r\n                placeholder=\"Enter info singer\"\r\n                as={'textarea'}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridNameAuthor\">\r\n              <Form.Label>Birthday</Form.Label>\r\n              <Form.Control\r\n                value={bithdaySinger}\r\n                onChange={e => this.onchangeText(\"bithdaySinger\", e.target.value)}\r\n                placeholder=\"Enter birthday\"\r\n                type={\"date\"}\r\n                // data-date-format={\"DD MM YYYY\"}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridNameAuthor\">\r\n              <Form.Label>Fanpage</Form.Label>\r\n              <Form.Control\r\n                // value={authorMusic}\r\n                // onChange={e => this.onchangeText(\"authorMusic\", e.target.value)}\r\n                placeholder=\"Enter fanpage\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formUploadMp3\">\r\n              <Form.Label>Upload Image Singer</Form.Label>\r\n              <Form.Control onChange={(e)=>this.onchangeText(\"imgSinger\",e.target.value)} />\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group controlId=\"formGridChooseCategory\">\r\n              <Form.Label>Category</Form.Label>\r\n\r\n              <Form.Control onChange={(e)=>this.onchangeText(\"categorySinger\",e.target.value)} as=\"select\">\r\n              <option selected>Choose category</option>\r\n\r\n                {this.state.listCategory != undefined && this.state.listCategory.map((data)=>{\r\n                  return(\r\n                    <option>{data.name}</option>\r\n                    )\r\n                })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"formGridCheckbox\">\r\n              <Form.Check type=\"checkbox\" label=\"Disable me?\" />\r\n            </Form.Group>\r\n\r\n            <Button onClick={()=>this.state.type == 1?this.btnEditSinger():this.btnAddSinger()} variant=\"primary\" type=\"submit\">\r\n              {this.state.type == 1 ?\"Edit\":\"Add\"}\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const options = {\r\n      custom: true,\r\n      paginationSize: 4,\r\n      pageStartIndex: 1,\r\n      firstPageText: \"First\",\r\n      prePageText: \"Back\",\r\n      nextPageText: \"Next\",\r\n      lastPageText: \"Last\",\r\n      nextPageTitle: \"First page\",\r\n      prePageTitle: \"Pre page\",\r\n      firstPageTitle: \"Next page\",\r\n      lastPageTitle: \"Last page\",\r\n      showTotal: true,\r\n      //   totalSize: this.state.data.length\r\n    };\r\n\r\n    const selectRows = {\r\n      mode: \"radio\",\r\n      clickToSelect: true,\r\n      onSelect: (row, isSelect, rowIndex, e) => {\r\n        this.setState({\r\n          dataSelect: row.id\r\n        });\r\n      }\r\n    };\r\n\r\n    const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n      <div>\r\n        <ToolkitProvider\r\n          keyField=\"id\"\r\n          columns={columns}\r\n          data={this.state.dataSinger != undefined ? this.state.dataSinger : []}\r\n          search\r\n        >\r\n          {toolkitprops => (\r\n            <div>\r\n              <div style={{ float: \"right\" }}>\r\n                <Button\r\n                  onClick={() => this.showModalAdd()}\r\n                  className={\"btn-md mx-md-2 px-md-4\"}\r\n\r\n                >\r\n                  Add\r\n                </Button>\r\n                <Button\r\n                  variant=\"info\"\r\n                  onClick={() => this.showModalEdit()}\r\n                  className={\"btn-md mx-md-2 px-md-4\"}\r\n                >\r\n                  Edit\r\n                </Button>\r\n                <SearchBar {...toolkitprops.searchProps} />\r\n              </div>\r\n              <BootstrapTable\r\n                striped\r\n                hover\r\n                selectRow={selectRows}\r\n                {...toolkitprops.baseProps}\r\n                {...paginationTableProps}\r\n              >\r\n              </BootstrapTable>\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n        <PaginationListStandalone {...paginationProps} />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={\"mt-md-2 mx-md-5 mb-md-5\"}>\r\n        <PaginationProvider pagination={paginationFactory(options)}>\r\n          {contentTable}\r\n        </PaginationProvider>\r\n\r\n        {/* Modal */}\r\n        {this.modalAddMusic()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Layout from \"./layout\";\r\nimport {\r\n  fetchListSinger,\r\n  addSinger,\r\n  detailSinger,\r\n  editSinger\r\n} from \"../../dataReducer/singer\";\r\nimport Swal from \"sweetalert2\";\r\nimport { fetchListCategory } from \"../../dataReducer/category\";\r\n\r\nexport default class SingerScreen extends Layout {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataSinger: [],\r\n      listCategory: [],\r\n      showModalAdd: false,\r\n      nameSinger: \"\",\r\n      realNameSinger: \"\",\r\n      infoSinger: \"\",\r\n      bithdaySinger: null,\r\n      type: 0,\r\n      dataSelect: \"\",\r\n      idSinger: \"\",\r\n      imgSinger: \"\",\r\n      categorySinger: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchListSinger();\r\n    this.fetchListCategory();\r\n  }\r\n\r\n  fetchListSinger = () => {\r\n    fetchListSinger().then(data => {\r\n      this.setState({\r\n        dataSinger: data,\r\n        showModalAdd:false\r\n      });\r\n    });\r\n  };\r\n\r\n  fetchListCategory = () => {\r\n    fetchListCategory().then(data => {\r\n      this.setState({\r\n        listCategory: this.state.listCategory.concat(data)\r\n      });\r\n    });\r\n  };\r\n\r\n  onchangeText = (nameState, value) => {\r\n    this.setState({\r\n      [nameState]: value\r\n    });\r\n  };\r\n\r\n  showModalAdd = () => {\r\n    this.setState({\r\n      showModalAdd: !this.state.showModalAdd\r\n    });\r\n  };\r\n\r\n  fetchSingerDetail = () => {\r\n    let params = {\r\n      id: this.state.dataSelect\r\n    };\r\n\r\n    detailSinger(params)\r\n      .then(data => {\r\n        if (data.data) {\r\n          let { name, real_name, id, birthday, info, imgSinger } = data.data[0];\r\n          this.setState(\r\n            {\r\n              nameSinger: name,\r\n              realNameSinger: real_name,\r\n              idSinger: id,\r\n              bithdaySinger: birthday,\r\n              infoSinger: info,\r\n              img: imgSinger\r\n            },\r\n            () => {\r\n              this.showModalAdd();\r\n            }\r\n          );\r\n        } else {\r\n          Swal.fire({\r\n            position: \"center\",\r\n            type: \"warning\",\r\n            title: data.msg,\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        alert(err);\r\n      });\r\n  };\r\n\r\n  btnAddSinger = () => {\r\n    let {\r\n      nameSinger,\r\n      realNameSinger,\r\n      infoSinger,\r\n      bithdaySinger,\r\n      imgSinger,\r\n      categorySinger\r\n    } = this.state;\r\n    let params = {\r\n      name: nameSinger,\r\n      info: infoSinger,\r\n      real_name: realNameSinger,\r\n      birthday: bithdaySinger,\r\n      img: imgSinger,\r\n      category: categorySinger\r\n    };\r\n    addSinger(params)\r\n      .then(data => {\r\n        console.log(data);\r\n        if (data != undefined && data != null) {\r\n          switch (data.stt) {\r\n            case 1:\r\n              Swal.fire({\r\n                position: \"center\",\r\n                type: \"success\",\r\n                title: data.msg,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n              });\r\n              this.fetchListSinger();\r\n              break;\r\n            case 400:\r\n              Swal.fire({\r\n                position: \"center\",\r\n                type: \"Error\",\r\n                title: data.msg,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n              });\r\n              break;\r\n          }\r\n        }\r\n      })\r\n      .then(err => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          type: \"Error\",\r\n          title: err,\r\n          showConfirmButton: false,\r\n          timer: 1500\r\n        });\r\n      });\r\n  };\r\n\r\n  btnEditSinger = () => {\r\n    let {\r\n      idSinger,\r\n      nameSinger,\r\n      realNameSinger,\r\n      infoSinger,\r\n      bithdaySinger\r\n    } = this.state;\r\n    let params = {\r\n      id: idSinger\r\n    };\r\n    let paramsUpdate = {\r\n      name: nameSinger,\r\n      info: infoSinger,\r\n      real_name: realNameSinger,\r\n      birthday: bithdaySinger\r\n    };\r\n    console.log(paramsUpdate);\r\n    editSinger(params, paramsUpdate).then(data => {\r\n      console.log(data);\r\n      this.setState(\r\n        {\r\n          showModalAdd: !this.state.showModalAdd\r\n        },\r\n        () => {\r\n          this.fetchListSinger();\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  showModalEdit = () => {\r\n    this.setState(\r\n      {\r\n        type: 1\r\n      },\r\n      () => this.fetchSingerDetail()\r\n    );\r\n  };\r\n\r\n  // END CLASS\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal, Form, Col } from \"react-bootstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport filterFactory, { textFilter } from \"react-bootstrap-table2-filter\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport Select from \"react-select\";\r\nconst { SearchBar } = Search;\r\nconst columns = [\r\n  {\r\n    dataField: \"id\",\r\n    text: \"Album ID\",\r\n    style: { \"white-space\": \"wrap\", width: \"10%\" }\r\n  },\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Album Name\",\r\n    style: { \"white-space\": \"wrap\", width: \"18%\" }\r\n  },\r\n  {\r\n    dataField: \"singer\",\r\n    text: \"Singer\",\r\n    style: { \"white-space\": \"wrap\", width: \"18%\" }\r\n  },\r\n  {\r\n    dataField: \"info\",\r\n    text: \"Album info\",\r\n    style: { \"white-space\": \"wrap\", width: \"18%\" }\r\n  },\r\n  {\r\n    dataField: \"Category\",\r\n    text: \"Album category\",\r\n    style: { \"white-space\": \"wrap\", width: \"18%\" }\r\n  },\r\n  {\r\n    dataField: \"listMusic\",\r\n    text: \"List music\",\r\n    style: { \"white-space\": \"wrap\", width: \"18%\" },\r\n    formatter: renderListMusic\r\n  },\r\n  {\r\n    dataField: \"img\",\r\n    text: \"Album Image\",\r\n    style: { \"white-space\": \"wrap\", width: \"18%\" }\r\n  },\r\n  {\r\n    dataField: \"hot\",\r\n    text: \"Album Hot\",\r\n    style: { \"white-space\": \"wrap\", width: \"2%\" }\r\n  }\r\n];\r\n\r\nfunction renderListMusic(cell, row) {\r\n  return (\r\n    <React.Fragment>\r\n      {row.listMusic != undefined &&\r\n        row.listMusic.length > 0 &&\r\n        row.listMusic.map((data, i) => {\r\n          return (\r\n            <React.Fragment key={i}>\r\n              {i < row.listMusic.length - 1 && (\r\n                <React.Fragment>{data.title+\", \"}</React.Fragment>\r\n              )}\r\n              {i == row.listMusic.length - 1 && (\r\n                <React.Fragment>{data.title}</React.Fragment>\r\n              )}\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default class layout extends Component {\r\n  modalAddMusic = () => {\r\n    let {\r\n      showModalAdd,\r\n      singerAlbum,\r\n      nameAlbum,\r\n      infoAlbum,\r\n      imgAlbum,\r\n      categoryAlbum,\r\n      hotAlbum\r\n    } = this.state;\r\n    return (\r\n      <Modal\r\n        show={showModalAdd}\r\n        onHide={() => this.showModalAdd()}\r\n        dialogClassName=\"modal-90w\"\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-custom-modal-styling-title\">\r\n            Add album\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formGridNameMusic\">\r\n              <Form.Label>Name Album</Form.Label>\r\n              <Form.Control\r\n                value={nameAlbum}\r\n                onChange={e => this.onchangeText(\"nameAlbum\", e.target.value)}\r\n                placeholder=\"Enter name album\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridNameSinger\">\r\n              <Form.Label>Singer</Form.Label>\r\n              <Form.Control\r\n                value={singerAlbum}\r\n                onChange={e => this.onchangeText(\"singerAlbum\", e.target.value)}\r\n                placeholder=\"Enter name singer\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridNameAuthor\">\r\n              <Form.Label>Info</Form.Label>\r\n              <Form.Control\r\n                value={infoAlbum}\r\n                onChange={e => this.onchangeText(\"infoAlbum\", e.target.value)}\r\n                placeholder=\"Enter info album\"\r\n                as={\"textarea\"}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridNameAuthor\">\r\n              <Form.Label>Music</Form.Label>\r\n              <Select\r\n                // value={[\r\n                //   { value: 'chocolate', label: 'Chocolate' },\r\n                //   { value: 'strawberry', label: 'Strawberry' },\r\n                //   { value: 'vanilla', label: 'Vanilla' },\r\n                // ]}\r\n                placeholder={\"Select music\"}\r\n                onChange={value => this.onChangeSelectMusic(value)}\r\n                isMulti={true}\r\n                options={this.state.dataMusic}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formUploadMp3\">\r\n              <Form.Label>Upload Image album</Form.Label>\r\n              <Form.Control onChange={() => null} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridChooseCategory\">\r\n              <Form.Label>Category</Form.Label>\r\n\r\n              <Form.Control as=\"select\">\r\n                {this.state.dataCategory != undefined &&\r\n                  this.state.dataCategory.map((data, i) => {\r\n                    return <option key={i}>{data.name}</option>;\r\n                  })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"formGridCheckbox\">\r\n              <Form.Check\r\n                checked={hotAlbum}\r\n                onChange={e => this.onchangeText(\"hotAlbum\", !hotAlbum)}\r\n                type=\"checkbox\"\r\n                label=\"Album hot?\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button\r\n              onClick={() =>\r\n                this.state.type == 1 ? this.btnAddAlbum() : this.btnAddAlbum()\r\n              }\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              {this.state.type == 1 ? \"Edit\" : \"Add\"}\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const options = {\r\n      custom: true,\r\n      paginationSize: 4,\r\n      pageStartIndex: 1,\r\n      firstPageText: \"First\",\r\n      prePageText: \"Back\",\r\n      nextPageText: \"Next\",\r\n      lastPageText: \"Last\",\r\n      nextPageTitle: \"First page\",\r\n      prePageTitle: \"Pre page\",\r\n      firstPageTitle: \"Next page\",\r\n      lastPageTitle: \"Last page\",\r\n      showTotal: true\r\n      //   totalSize: this.state.data.length\r\n    };\r\n\r\n    const selectRows = {\r\n      mode: \"radio\",\r\n      clickToSelect: true,\r\n      onSelect: (row, isSelect, rowIndex, e) => {\r\n        this.setState({\r\n          selectMusic: row.id\r\n        });\r\n      }\r\n    };\r\n\r\n    const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n      <div>\r\n        <ToolkitProvider\r\n          keyField=\"id\"\r\n          columns={columns}\r\n          data={this.state.dataAlbum != undefined ? this.state.dataAlbum : []}\r\n          search\r\n        >\r\n          {toolkitprops => (\r\n            <div>\r\n              <div style={{ float: \"right\" }}>\r\n                <Button\r\n                  onClick={() => this.showModalAdd()}\r\n                  className={\"btn-md mx-md-2 px-md-4\"}\r\n                >\r\n                  Add\r\n                </Button>\r\n                <Button\r\n                  variant=\"info\"\r\n                  onClick={() => this.showModalEdit()}\r\n                  className={\"btn-md mx-md-2 px-md-4\"}\r\n                >\r\n                  Edit\r\n                </Button>\r\n                <SearchBar {...toolkitprops.searchProps} />\r\n              </div>\r\n              <BootstrapTable\r\n                striped\r\n                hover\r\n                selectRow={selectRows}\r\n                {...toolkitprops.baseProps}\r\n                {...paginationTableProps}\r\n              />\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n        <PaginationListStandalone {...paginationProps} />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={\"mt-md-2 mx-md-5 mb-md-5\"}>\r\n        <PaginationProvider pagination={paginationFactory(options)}>\r\n          {contentTable}\r\n        </PaginationProvider>\r\n\r\n        {/* Modal */}\r\n        {this.modalAddMusic()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { url } from \"./api\";\r\n\r\nconst getListAlbum = async()=>{\r\n    try {\r\n        let respone = await fetch(url + \"/album\", {\r\n          method: \"post\",\r\n          body: JSON.stringify({\r\n            data: {\r\n              page:1,\r\n              limit:30\r\n            },\r\n            fields:``\r\n          }),\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        });\r\n        let responeJson = await respone.json();\r\n        return responeJson.data;\r\n      } catch (err) {\r\n        alert(err);\r\n      }\r\n}\r\n\r\nconst addAlbum = async(data)=>{\r\n  try {\r\n      let respone = await fetch(url + \"/album/add\", {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          data\r\n        }),\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n      let responeJson = await respone.json();\r\n      return responeJson;\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n}\r\n\r\nexport {getListAlbum,addAlbum}","import Layout from \"./layout\";\r\nimport { getListAlbum, addAlbum } from \"../../dataReducer/album\";\r\nimport {getListMusic } from \"../../dataReducer/music\";\r\nimport {fetchListCategory } from \"../../dataReducer/category\";\r\n\r\nimport { convertSlug } from \"../../core/func\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default class CategoryScree extends Layout {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataAlbum: [],\r\n      dataMusic:[],\r\n      dataCategory:[],\r\n      musicSeleted:[],\r\n      showModalAdd: false,\r\n      nameAlbum: \"\",\r\n      singerAlbum: \"\",\r\n      infoAlbum: \"\",\r\n      imgAlbum: \"\",\r\n      categoryAlbum: \"\",\r\n      hotAlbum: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataAlbum();\r\n    this.getListMusic();\r\n    this.fetchListCategory()\r\n  }\r\n\r\n  // Call API fetch\r\n  fetchDataAlbum = () => {\r\n    getListAlbum().then(data => {\r\n      this.setState({\r\n        dataAlbum: data,\r\n        showModalAdd:false,\r\n      });\r\n    });\r\n  };\r\n\r\n  fetchListCategory = ()=>{\r\n    fetchListCategory().then((data)=>{\r\n      this.setState({\r\n        dataCategory:data\r\n      })\r\n    })\r\n  }\r\n\r\n  getListMusic = () => {\r\n    getListMusic().then(data => {\r\n      let array = [];\r\n      data.map((dat)=>{\r\n        array.push(Object.assign(dat,{value:dat.title,label:dat.title}))\r\n      })\r\n      this.setState({\r\n        dataMusic: this.state.dataMusic.concat(array)\r\n      },()=>{\r\n        console.log(this.state.dataMusic)\r\n      });\r\n    });\r\n  };\r\n\r\n  // END CALL\r\n  onchangeText = (nameState, value) => {\r\n    this.setState({\r\n      [nameState]: value\r\n    });\r\n  };\r\n\r\n  showModalAdd = () => {\r\n    this.setState({\r\n      showModalAdd: !this.state.showModalAdd\r\n    });\r\n  };\r\n\r\n  showModalEdit = () => {\r\n    this.setState(\r\n      {\r\n        type: 1\r\n      },\r\n      () => this.fetchSingerDetail()\r\n    );\r\n  };\r\n\r\n  btnAddAlbum = () => {\r\n    \r\n    let {\r\n      nameAlbum,\r\n      singerAlbum,\r\n      hotAlbum,\r\n      infoAlbum,\r\n      imgAlbum,\r\n      categoryAlbum,\r\n      musicSeleted\r\n    } = this.state;\r\n    let params = {\r\n      name: nameAlbum,\r\n      singer: singerAlbum,\r\n      info: infoAlbum,\r\n      category: categoryAlbum,\r\n      listMusic:musicSeleted,\r\n      hot: hotAlbum ? 1 : 0,\r\n      song:musicSeleted.map((data)=>data.id),\r\n      time: new Date().getTime(),\r\n      slug: convertSlug(nameAlbum)\r\n    };\r\n    \r\n    addAlbum(params).then(data => {\r\n      if (data != undefined) {\r\n        if (data.stt == 1) {\r\n          Swal.fire({\r\n            position: \"center\",\r\n            type: \"success\",\r\n            title: data.msg,\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          });\r\n          this.fetchDataAlbum()\r\n        }\r\n      }\r\n    }).catch(err=>{\r\n      Swal.fire({\r\n        position: \"center\",\r\n        type: \"error\",\r\n        title: err,\r\n        showConfirmButton: false,\r\n        timer: 1500\r\n      });\r\n    });\r\n  };\r\n\r\n\r\n  onChangeSelectMusic = (data)=>{\r\n    this.setState({\r\n      musicSeleted:data\r\n    })\r\n  }\r\n\r\n\r\n  // END CLASS\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal, Form, Col } from \"react-bootstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport filterFactory, { textFilter } from \"react-bootstrap-table2-filter\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nconst { SearchBar } = Search;\r\nconst columns = [\r\n  {\r\n    dataField: \"id\",\r\n    text: \"User ID\",\r\n    style: { \"white-space\": \"wrap\", width: \"10%\" }\r\n\r\n  },\r\n  {\r\n    dataField: \"username\",\r\n    text: \"Username\",\r\n    style: { \"white-space\": \"wrap\", width: \"20%\" }\r\n  },\r\n  {\r\n    dataField: \"email\",\r\n    text: \"Email\",\r\n    style: { \"white-space\": \"wrap\", width: \"25%\" }\r\n\r\n  },\r\n  {\r\n    dataField: \"facebook\",\r\n    text: \"Facebook\",\r\n    style: { \"white-space\": \"wrap\", width: \"25%\" }\r\n\r\n  },\r\n  {\r\n    dataField: \"avatar\",\r\n    text: \"Avatar\",\r\n    style: { \"white-space\": \"wrap\", width: \"20%\" }\r\n\r\n  }\r\n];\r\nexport default class layout extends Component {\r\n  render() {\r\n    const options = {\r\n      custom: true,\r\n      paginationSize: 4,\r\n      pageStartIndex: 1,\r\n      firstPageText: \"First\",\r\n      prePageText: \"Back\",\r\n      nextPageText: \"Next\",\r\n      lastPageText: \"Last\",\r\n      nextPageTitle: \"First page\",\r\n      prePageTitle: \"Pre page\",\r\n      firstPageTitle: \"Next page\",\r\n      lastPageTitle: \"Last page\",\r\n      showTotal: true\r\n      //   totalSize: this.state.data.length\r\n    };\r\n\r\n    const selectRows = {\r\n      mode: \"radio\",\r\n      clickToSelect: true,\r\n      onSelect: (row, isSelect, rowIndex, e) => {\r\n        this.setState({\r\n          selectMusic: row.id\r\n        });\r\n      }\r\n    };\r\n\r\n    const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n      <div>\r\n        <ToolkitProvider\r\n          keyField=\"title\"\r\n          columns={columns}\r\n            data={this.state.userList != undefined ? this.state.userList : []}\r\n          // data={[{ id: 1 }]}\r\n          search\r\n        >\r\n          {toolkitprops => (\r\n            <div>\r\n              <div style={{ float: \"right\" }}>\r\n                <Button\r\n                  onClick={() => this.showModalAdd()}\r\n                  className={\"btn-md mx-md-2 px-md-4\"}\r\n\r\n                >\r\n                  Add\r\n                </Button>\r\n                <Button\r\n                  variant=\"info\"\r\n                  onClick={() => this.showModalEdit()}\r\n                  className={\"btn-md mx-md-2 px-md-4\"}\r\n                >\r\n                  Edit\r\n                </Button>\r\n                <SearchBar {...toolkitprops.searchProps} />\r\n              </div>\r\n              <BootstrapTable\r\n                striped\r\n                hover\r\n                selectRow={selectRows}\r\n                {...toolkitprops.baseProps}\r\n                {...paginationTableProps}\r\n              />\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n        <PaginationListStandalone {...paginationProps} />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={\"mt-md-2 mx-md-5 mb-md-5\"}>\r\n        <PaginationProvider pagination={paginationFactory(options)}>\r\n          {contentTable}\r\n        </PaginationProvider>\r\n\r\n        {/* Modal */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Layout from './layout';\r\nimport { getUsers } from '../../dataReducer/user';\r\n\r\n\r\nexport default class UserScreen extends Layout{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            userList:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getListUser()\r\n    }\r\n\r\n    getListUser = ()=>{\r\n        let data = {\r\n        }\r\n        let fields = ``\r\n        getUsers(data,fields).then((data)=>{\r\n            this.setState({\r\n                userList:this.state.userList.concat(data)\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    // END CLASS\r\n}","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { LoginScreen, HomeScreen } from \"./component\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\r\n\r\nexport default class App extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Router>\r\n          <Route path=\"/login\" component={LoginScreen} />\r\n          <PrivateRoute path=\"/admin\"exact component={HomeScreen} />\r\n          \r\n          <Route render={()=><div><h1> Not found</h1></div>} />\r\n        </Router>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (sessionStorage.getItem(\"token\")) {\r\n          return <Component {...props} />;\r\n        }\r\n        return (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\"\r\n            }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}